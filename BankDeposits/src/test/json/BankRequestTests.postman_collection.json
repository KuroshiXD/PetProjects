{
	"info": {
		"_postman_id": "e95eaa0c-b300-471d-bc88-e15b6b30d8c9",
		"name": "BankRequestTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39447043"
	},
	"item": [
		{
			"name": "PostBankTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains expected fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"    pm.expect(jsonData).to.have.property(\"bik\");\r",
							"    pm.expect(jsonData.name).to.equal(\"Tin Bank\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Tin Bank\" ,\r\n    \"bik\": \"156848451656468\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/banks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"banks"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteBankTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/banks/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"banks",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetAllBanksTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is object\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/banks",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"banks"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetBankByIdTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains expected fields\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"id\");\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"    pm.expect(jsonData).to.have.property(\"bik\");\r",
							"});\r",
							"\r",
							"pm.test(\"Correct id returned\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    const requestedId = parseInt(pm.request.url.path[1], 10);\r",
							"    pm.expect(jsonData.id).to.equal(requestedId);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/banks/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"banks",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutBankTest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Updated name is correct\", function () {\r",
							"    const jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.equal(\"Updated Ultra Bank\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Updated Ultra Bank\",\r\n    \"bik\": \"548568453548453\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/banks/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"banks",
						"1"
					]
				}
			},
			"response": []
		}
	]
}